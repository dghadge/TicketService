{
  "AWSTemplateFormatVersion": "2010-09-09",
  "Description": "Template to create VPC and Subnets. Use this as your starting point for creating network for your project. Creates VPC, 1 public subnet, 3 private subnets, s3 endpoint and appropriate routing.",
  "Parameters": {
    "Owner": {
      "Description": "Enter Team or Individual Name Responsible for the Stack.",
      "Type": "String",
      "Default": "FirstName LastName"
    },
    "Project": {
      "Description": "Enter Project Name.",
      "Type": "String",
      "Default": "VPC Creation"
    },
    "DeleteAfter": {
      "Description": "Enter Date (MM/DD/YYYY). It's Ok to Delete the Stack or 'Never' if meant to be persistent.",
      "Type": "String",
      "Default": "00/00/201x"
    },
    "VPCSubnetCidrBlock": {
      "Description": "Enter VPC CIDR Block.",
      "Type": "String",
      "Default": "172.16.8.0/21",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "AvailabilityZone1": {
      "Description": "Enter Availability Zone 1 for Public and Private Subnets to use.",
      "Type": "String",
      "Default": "a",
      "AllowedValues": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f"
      ]
    },
    "AvailabilityZone2": {
      "Description": "Enter Availability Zone 1 for Public and Private Subnets to use.",
      "Type": "String",
      "Default": "b",
      "AllowedValues": [
        "a",
        "b",
        "c",
        "d",
        "e",
        "f"
      ]
    },
    "PublicSubnetCidrBlock1": {
      "Description": "Enter Public Subnet 1 CIDR Block.",
      "Type": "String",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "PublicSubnetCidrBlock2": {
      "Description": "Enter Public Subnet 2 CIDR Block.",
      "Type": "String",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "PrivateSubnetCidrBlock1": {
      "Description": "Enter Private Subnet 1 CIDR Block.",
      "Type": "String",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "PrivateSubnetCidrBlock2": {
      "Description": "Enter Private Subnet 2 CIDR Block.",
      "Type": "String",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "PrivateSubnetCidrBlock3": {
      "Description": "Enter Private Subnet 3 CIDR Block.",
      "Type": "String",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "PrivateSubnetCidrBlock4": {
      "Description": "Enter Private Subnet 4 CIDR Block.",
      "Type": "String",
      "MinLength": "10",
      "MaxLength": "18",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})"
    },
    "RemoteAccessNetwork": {
      "Description": "Source Network IP CIDR Block such as an Office that can access instances say over VPN.",
      "Type": "String",
      "MinLength": "9",
      "MaxLength": "18",
      "Default": "10.128.0.0/16",
      "AllowedPattern": "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})/(\\d{1,2})",
      "ConstraintDescription": "must be a valid CIDR range of the form x.x.x.x/x."
    },
    "AllowHttpToPublicRuleNumber": {
      "Description": "Enter Public Network ACL Rule Number to Allow HTTP From Internet to Public Network.",
      "Type": "Number",
      "Default": "100"
    },
    "AllowHttpsToPublicRuleNumber": {
      "Description": "Enter Public Network ACL Rule Number to Allow HTTPS From Internet to Public Network.",
      "Type": "Number",
      "Default": "105"
    },
    "AllowSSHToPublicRuleNumber": {
      "Description": "Enter Public Network ACL Rule Number to Allow SSH From Internet to Public Network.",
      "Type": "Number",
      "Default": "106"
    },
    "AllowRDPToPublicRuleNumber": {
      "Description": "Enter Public Network ACL Rule Number to Allow RDP From Internet to Public Network.",
      "Type": "Number",
      "Default": "107"
    },
    "AllowReturnTrafficToPublicRuleNumber": {
      "Description": "Enter Public Network ACL Rule Number to Allow Return Traffic From Internet to Public Network.",
      "Type": "Number",
      "Default": "110"
    },
    "AllowVpcSubnetsRuleNumber": {
      "Description": "Enter Public Network ACL Rule Number to Allow All VPC Subnets Cross Access to Public Network.",
      "Type": "Number",
      "Default": "115"
    },
    "AllowAllOutboundPublicRuleNumber": {
      "Description": "Enter Public Network ACL Rule Number to Allow All Outbound Traffic from the Public Network.",
      "Type": "Number",
      "Default": "100"
    },
    "AllowAllInboundPrivateRuleNumber": {
      "Description": "Enter Private Network ACL Rule Number to Allow All Inbound Traffic.",
      "Type": "Number",
      "Default": "100"
    },
    "AllowAllOutboundPrivateRuleNumber": {
      "Description": "Enter Private Network ACL Rule Number to Allow All Outbound Traffic.",
      "Type": "Number",
      "Default": "100"
    }
  },
  "Resources": {
    "VPC": {
      "Type": "AWS::EC2::VPC",
      "Properties": {
        "EnableDnsSupport": "true",
        "EnableDnsHostnames": "true",
        "CidrBlock": {
          "Ref": "VPCSubnetCidrBlock"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          }
        ]
      }
    },
    "PublicSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AvailabilityZone1"
              }
            ]
          ]
        },
        "CidrBlock": {
          "Ref": "PublicSubnetCidrBlock1"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-public-",
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AvailabilityZone1"
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          }
        ]
      }
    },
    "PublicSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AvailabilityZone2"
              }
            ]
          ]
        },
        "CidrBlock": {
          "Ref": "PublicSubnetCidrBlock2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-public-",
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AvailabilityZone2"
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          }
        ]
      }
    },
    "InternetGateway": {
      "Type": "AWS::EC2::InternetGateway",
      "Properties": {
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Ref": "AWS::StackName"
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          }
        ]
      }
    },
    "GatewayToInternet": {
      "Type": "AWS::EC2::VPCGatewayAttachment",
      "DependsOn": [
        "InternetGateway",
        "VPC"
      ],
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "InternetGatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "NatEIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc"
      }
    },
    "NatGateway": {
      "Type": "AWS::EC2::NatGateway",
      "DependsOn": "NatEIP",
      "Properties": {
        "AllocationId": {
          "Fn::GetAtt": [
            "NatEIP",
            "AllocationId"
          ]
        },
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-natgw-subnet"
                ]
              ]
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          }
        ]
      }
    },
    "NatRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": "NatGateway",
      "Properties": {
        "RouteTableId": {
          "Ref": "PrivateRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "NatGatewayId": {
          "Ref": "NatGateway"
        }
      }
    },
    "PublicRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-public"
                ]
              ]
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          }
        ]
      }
    },
    "PublicRoute": {
      "Type": "AWS::EC2::Route",
      "DependsOn": [
        "PublicRouteTable",
        "InternetGateway"
      ],
      "Properties": {
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        },
        "DestinationCidrBlock": "0.0.0.0/0",
        "GatewayId": {
          "Ref": "InternetGateway"
        }
      }
    },
    "PublicSubnetRouteTableAssociation1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicSubnet1",
        "PublicRouteTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PublicSubnetRouteTableAssociation2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PublicSubnet2",
        "PublicRouteTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet2"
        },
        "RouteTableId": {
          "Ref": "PublicRouteTable"
        }
      }
    },
    "PrivateSubnet1": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AvailabilityZone1"
              }
            ]
          ]
        },
        "CidrBlock": {
          "Ref": "PrivateSubnetCidrBlock1"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-private-",
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AvailabilityZone1"
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          }
        ]
      }
    },
    "PrivateSubnet2": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AvailabilityZone2"
              }
            ]
          ]
        },
        "CidrBlock": {
          "Ref": "PrivateSubnetCidrBlock2"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-private-",
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AvailabilityZone2"
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          }
        ]
      }
    },
    "PrivateRouteTable": {
      "Type": "AWS::EC2::RouteTable",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-private"
                ]
              ]
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          }
        ]
      }
    },
    "PrivateSubnet3": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AvailabilityZone1"
              }
            ]
          ]
        },
        "CidrBlock": {
          "Ref": "PrivateSubnetCidrBlock3"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-private-db-",
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AvailabilityZone1"
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          }
        ]
      }
    },
    "PrivateSubnet4": {
      "Type": "AWS::EC2::Subnet",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "AvailabilityZone": {
          "Fn::Join": [
            "",
            [
              {
                "Ref": "AWS::Region"
              },
              {
                "Ref": "AvailabilityZone2"
              }
            ]
          ]
        },
        "CidrBlock": {
          "Ref": "PrivateSubnetCidrBlock4"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-private-db-",
                  {
                    "Fn::Join": [
                      "",
                      [
                        {
                          "Ref": "AWS::Region"
                        },
                        {
                          "Ref": "AvailabilityZone2"
                        }
                      ]
                    ]
                  }
                ]
              ]
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          }
        ]
      }
    },
    "PrivateSubnetRouteTableAssociation1": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnet1",
        "PrivateRouteTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnet1"
        },
        "RouteTableId": {
          "Ref": "PrivateRouteTable"
        }
      }
    },
    "PrivateSubnetRouteTableAssociation2": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnet2",
        "PrivateRouteTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnet2"
        },
        "RouteTableId": {
          "Ref": "PrivateRouteTable"
        }
      }
    },
    "PrivateSubnetRouteTableAssociation3": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnet3",
        "PrivateRouteTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnet3"
        },
        "RouteTableId": {
          "Ref": "PrivateRouteTable"
        }
      }
    },
    "PrivateSubnetRouteTableAssociation4": {
      "Type": "AWS::EC2::SubnetRouteTableAssociation",
      "DependsOn": [
        "PrivateSubnet4",
        "PrivateRouteTable"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnet4"
        },
        "RouteTableId": {
          "Ref": "PrivateRouteTable"
        }
      }
    },
    "S3VpcEndpoint": {
      "Type": "AWS::EC2::VPCEndpoint",
      "DependsOn": [
        "VPC",
        "PrivateRouteTable",
        "PublicRouteTable"
      ],
      "Properties": {
        "PolicyDocument": {
          "Statement": [
            {
              "Action": "*",
              "Effect": "Allow",
              "Resource": "*",
              "Principal": "*"
            }
          ]
        },
        "RouteTableIds": [
          {
            "Ref": "PrivateRouteTable"
          },
          {
            "Ref": "PublicRouteTable"
          }
        ],
        "ServiceName": {
          "Fn::Join": [
            "",
            [
              "com.amazonaws.",
              {
                "Ref": "AWS::Region"
              },
              ".s3"
            ]
          ]
        },
        "VpcId": {
          "Ref": "VPC"
        }
      }
    },
    "PublicNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-public-acl"
                ]
              ]
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          }
        ]
      }
    },
    "InboundPublicNetworkAclAllowHTTP": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        },
        "RuleNumber": {
          "Ref": "AllowHttpToPublicRuleNumber"
        },
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "80",
          "To": "80"
        }
      }
    },
    "InboundPublicNetworkAclAllowHTTPS": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        },
        "RuleNumber": {
          "Ref": "AllowHttpsToPublicRuleNumber"
        },
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "443",
          "To": "443"
        }
      }
    },
    "InboundPublicNetworkAclAllowSSH": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        },
        "RuleNumber": {
          "Ref": "AllowSSHToPublicRuleNumber"
        },
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "22",
          "To": "22"
        }
      }
    },
    "InboundPublicNetworkAclAllowRDP": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        },
        "RuleNumber": {
          "Ref": "AllowRDPToPublicRuleNumber"
        },
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "3389",
          "To": "3389"
        }
      }
    },
    "InboundPublicNetworkAclAllowReturnTraffic": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        },
        "RuleNumber": {
          "Ref": "AllowReturnTrafficToPublicRuleNumber"
        },
        "Protocol": "6",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "1024",
          "To": "65535"
        }
      }
    },
    "InboundPublicNetworkAclAllowVPCSubnets": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        },
        "RuleNumber": {
          "Ref": "AllowVpcSubnetsRuleNumber"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": {
          "Ref": "VPCSubnetCidrBlock"
        },
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "OutboundPublicNetworkAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PublicNetworkAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        },
        "RuleNumber": {
          "Ref": "AllowAllOutboundPublicRuleNumber"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "PublicSubnetNetworkAclAssociation1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PublicSubnet1",
        "PublicNetworkAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet1"
        },
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        }
      }
    },
    "PublicSubnetNetworkAclAssociation2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PublicSubnet2",
        "PublicNetworkAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PublicSubnet2"
        },
        "NetworkAclId": {
          "Ref": "PublicNetworkAcl"
        }
      }
    },
    "PrivateNetworkAcl": {
      "Type": "AWS::EC2::NetworkAcl",
      "DependsOn": "VPC",
      "Properties": {
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-private-acl"
                ]
              ]
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          }
        ]
      }
    },
    "InboundEphemeralPrivateNetworkAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PrivateNetworkAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        },
        "RuleNumber": {
          "Ref": "AllowAllInboundPrivateRuleNumber"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "false",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "OutboundPrivateNetworkAclAllowAll": {
      "Type": "AWS::EC2::NetworkAclEntry",
      "DependsOn": "PrivateNetworkAcl",
      "Properties": {
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        },
        "RuleNumber": {
          "Ref": "AllowAllOutboundPrivateRuleNumber"
        },
        "Protocol": "-1",
        "RuleAction": "allow",
        "Egress": "true",
        "CidrBlock": "0.0.0.0/0",
        "PortRange": {
          "From": "0",
          "To": "65535"
        }
      }
    },
    "PrivateSubnetNetworkAclAssociation1": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnet1",
        "PrivateNetworkAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnet1"
        },
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        }
      }
    },
    "PrivateSubnetNetworkAclAssociation2": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnet2",
        "PrivateNetworkAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnet2"
        },
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        }
      }
    },
    "PrivateSubnetNetworkAclAssociation3": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnet3",
        "PrivateNetworkAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnet3"
        },
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        }
      }
    },
    "PrivateSubnetNetworkAclAssociation4": {
      "Type": "AWS::EC2::SubnetNetworkAclAssociation",
      "DependsOn": [
        "PrivateSubnet4",
        "PrivateNetworkAcl"
      ],
      "Properties": {
        "SubnetId": {
          "Ref": "PrivateSubnet4"
        },
        "NetworkAclId": {
          "Ref": "PrivateNetworkAcl"
        }
      }
    },
    "InternalAccessSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "DependsOn": "VPC",
      "Properties": {
        "GroupDescription": "Instance to Instance Access in VPC",
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-instance-to-instance"
                ]
              ]
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          }
        ]
      }
    },
    "InternalAccessSecurityGroupIngress": {
      "Type": "AWS::EC2::SecurityGroupIngress",
      "DependsOn": "InternalAccessSecurityGroup",
      "Properties": {
        "GroupId": {
          "Ref": "InternalAccessSecurityGroup"
        },
        "IpProtocol": "-1",
        "SourceSecurityGroupId": {
          "Ref": "InternalAccessSecurityGroup"
        }
      }
    },
    "RemoteAccessSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "GroupDescription": "Instance Access over VPN/Direct Connect",
        "VpcId": {
          "Ref": "VPC"
        },
        "Tags": [
          {
            "Key": "Name",
            "Value": {
              "Fn::Join": [
                "",
                [
                  {
                    "Ref": "AWS::StackName"
                  },
                  "-remote-to-instance"
                ]
              ]
            }
          },
          {
            "Key": "Owner",
            "Value": {
              "Ref": "Owner"
            }
          },
          {
            "Key": "Project",
            "Value": {
              "Ref": "Project"
            }
          },
          {
            "Key": "DeleteAfter",
            "Value": {
              "Ref": "DeleteAfter"
            }
          }
        ],
        "SecurityGroupIngress": [
          {
            "IpProtocol": "-1",
            "CidrIp": {
              "Ref": "RemoteAccessNetwork"
            }
          }
        ],
        "SecurityGroupEgress": [
          {
            "IpProtocol": "-1",
            "CidrIp": "0.0.0.0/0"
          }
        ]
      }
    }
  },
  "Outputs": {
    "Owner": {
      "Description": "Team or Individual that Owns this Formation.",
      "Value": {
        "Ref": "Owner"
      }
    },
    "Project": {
      "Description": "The project name",
      "Value": {
        "Ref": "Project"
      }
    },
    "VPC": {
      "Description": "Created VPC",
      "Value": {
        "Ref": "VPC"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-VPCID"
        }
      }
    },
    "VPCCIDR": {
      "Description": "VPC Subnet CIDR Block",
      "Value": {
        "Ref": "VPCSubnetCidrBlock"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-VPC-CIDR"
        }
      }
    },
    "VPCe": {
      "Description": "Created VPC Endpoint",
      "Value": {
        "Ref": "S3VpcEndpoint"
      }
    },
    "PublicRouteTable": {
      "Description": "Public Route Table Created for VPC",
      "Value": {
        "Ref": "PublicRouteTable"
      }
    },
    "PrivateRouteTable": {
      "Description": "Private Route Table Created for VPC",
      "Value": {
        "Ref": "PrivateRouteTable"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateRouteTable"
        }
      }
    },
    "PublicNetworkAcl": {
      "Description": "Public Network ACL Created for VPC",
      "Value": {
        "Ref": "PublicNetworkAcl"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicNetworkAcl"
        }
      }
    },
    "PrivateNetworkAcl": {
      "Description": "Private Netowrk ACL Created for VPC",
      "Value": {
        "Ref": "PrivateNetworkAcl"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateNACL"
        }
      }
    },
    "PublicSubnet1": {
      "Description": "Public Subnet 1 Created for VPC",
      "Value": {
        "Ref": "PublicSubnet1"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicSubnet1"
        }
      }
    },
    "PublicSubnet2": {
      "Description": "Public Subnet 2 Created for VPC",
      "Value": {
        "Ref": "PublicSubnet2"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicSubnet2"
        }
      }
    },
    "PrivateSubnet1": {
      "Description": "Private Subnet 1 Created in VPC for Web/App Servers",
      "Value": {
        "Ref": "PrivateSubnet1"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateSubnet1"
        }
      }
    },
    "PrivateSubnet2": {
      "Description": "Private Subnet 2 Created in VPC for Web/App Servers",
      "Value": {
        "Ref": "PrivateSubnet2"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateSubnet2"
        }
      }
    },
    "PrivateSubnet3": {
      "Description": "Private Subnet 3 Created in VPC for DB Servers",
      "Value": {
        "Ref": "PrivateSubnet3"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateSubnet-DB1"
        }
      }
    },
    "PrivateSubnet4": {
      "Description": "Private Subnet 4 Created in VPC for DB Servers",
      "Value": {
        "Ref": "PrivateSubnet4"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateSubnet-DB2"
        }
      }
    },
    "AvailabilityZone1": {
      "Description": "Private Subnet IDs Created for VPC",
      "Value": {
        "Fn::GetAtt": [
          "PrivateSubnet1",
          "AvailabilityZone"
        ]
      }
    },
    "AvailabilityZone2": {
      "Description": "Private Subnet IDs Created for VPC",
      "Value": {
        "Fn::GetAtt": [
          "PrivateSubnet2",
          "AvailabilityZone"
        ]
      }
    },
    "PublicSubnetCidr1": {
      "Description": "Public Subnet IDs Created for VPC",
      "Value": {
        "Ref": "PublicSubnetCidrBlock1"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicSubnetCidr1"
        }
      }
    },
    "PublicSubnetCidr2": {
      "Description": "Private Subnet IDs Created for VPC",
      "Value": {
        "Ref": "PublicSubnetCidrBlock2"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PublicSubnetCidr2"
        }
      }
    },
    "PrivateSubnetCidr1": {
      "Description": "Private Subnet IDs Created for VPC",
      "Value": {
        "Ref": "PrivateSubnetCidrBlock1"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateSubnetCidr1"
        }
      }
    },
    "PrivateSubnetCidr2": {
      "Description": "Private Subnet IDs Created for VPC",
      "Value": {
        "Ref": "PrivateSubnetCidrBlock2"
      },
      "Export": {
        "Name": {
          "Fn::Sub": "${AWS::StackName}-PrivateSubnetCidr2"
        }
      }
    },
    "InternetGateway": {
      "Description": "Internet Gateway Created for VPC",
      "Value": {
        "Ref": "InternetGateway"
      }
    },
    "InternalAccessSecurityGroup": {
      "Description": "Instance to Instance Access within VPC",
      "Value": {
        "Ref": "InternalAccessSecurityGroup"
      }
    },
    "RemoteAccessSecurityGroup": {
      "Description": "Remote Network or IP that can Access the instances of VPN or Direct Connect.",
      "Value": {
        "Ref": "RemoteAccessSecurityGroup"
      }
    },
    "PublicNetworkACLRuleNumbers": {
      "Description": "Public Network ACL Rules Numbers Created.",
      "Value": {
        "Fn::Join": [
          "",
          [
            "Inbound (",
            {
              "Ref": "AllowHttpToPublicRuleNumber"
            },
            ", ",
            {
              "Ref": "AllowHttpsToPublicRuleNumber"
            },
            ", ",
            {
              "Ref": "AllowSSHToPublicRuleNumber"
            },
            ", ",
            {
              "Ref": "AllowRDPToPublicRuleNumber"
            },
            ", ",
            {
              "Ref": "AllowReturnTrafficToPublicRuleNumber"
            },
            ", ",
            {
              "Ref": "AllowVpcSubnetsRuleNumber"
            },
            ") ",
            "Outbound (",
            {
              "Ref": "AllowAllOutboundPublicRuleNumber"
            },
            ")"
          ]
        ]
      }
    },
    "PrivateNetworkACLRuleNumbers": {
      "Description": "Private Network ACL Rules Numbers Created.",
      "Value": {
        "Fn::Join": [
          "",
          [
            "Inbound (",
            {
              "Ref": "AllowAllInboundPrivateRuleNumber"
            },
            ") ",
            "Outbound (",
            {
              "Ref": "AllowAllOutboundPrivateRuleNumber"
            },
            ")"
          ]
        ]
      }
    },
    "DeleteAfter": {
      "Description": "It is ok to delete this Formation after this date",
      "Value": {
        "Ref": "DeleteAfter"
      }
    }
  },
  "Metadata": {
    "AWS::CloudFormation::Interface": {
      "ParameterGroups": [
        {
          "Label": {
            "default": "Ownership"
          },
          "Parameters": [
            "Owner",
            "Project",
            "DeleteAfter"
          ]
        },
        {
          "Label": {
            "default": "Remote Configurations"
          },
          "Parameters": [
            "RemoteAccessNetwork"
          ]
        },
        {
          "Label": {
            "default": "AWS Network Configurations"
          },
          "Parameters": [
            "VPCSubnetCidrBlock",
            "PublicSubnetCidrBlock1",
            "PublicSubnetCidrBlock2",
            "PrivateSubnetCidrBlock1",
            "PrivateSubnetCidrBlock2",
            "PrivateSubnetCidrBlock3",
            "PrivateSubnetCidrBlock4",
            "AvailabilityZone1",
            "AvailabilityZone2"
          ]
        },
        {
          "Label": {
            "default": "AWS Network ACL Rule Numbers"
          },
          "Parameters": [
            "AllowHttpToPublicRuleNumber",
            "AllowHttpsToPublicRuleNumber",
            "AllowSSHToPublicRuleNumber",
            "AllowRDPToPublicRuleNumber",
            "AllowReturnTrafficToPublicRuleNumber",
            "AllowVpcSubnetsRuleNumber",
            "AllowAllOutboundPublicRuleNumber",
            "AllowAllInboundPrivateRuleNumber",
            "AllowAllOutboundPrivateRuleNumber"
          ]
        }
      ],
      "ParameterLabels": {
        "Owner": {
          "default": "Team or Individual Owner"
        },
        "DeleteAfter": {
          "default": "Delete After Date"
        },
        "VPCSubnetCidrBlock": {
          "default": "VPC Subnet"
        },
        "PublicSubnetCidrBlock1": {
          "default": "Public Subnet 1 [DMZ]"
        },
        "PublicSubnetCidrBlock2": {
          "default": "Public Subnet 2 [DMZ]"
        },
        "PrivateSubnetCidrBlock1": {
          "default": "Private Subnet 1 [Web/App]"
        },
        "PrivateSubnetCidrBlock2": {
          "default": "Private Subnet 2 [Web/App]"
        },
        "PrivateSubnetCidrBlock3": {
          "default": "Private Subnet 3 [DB]"
        },
        "PrivateSubnetCidrBlock4": {
          "default": "Private Subnet 4 [DB]"
        },
        "AvailabilityZone1": {
          "default": "Availability Zone 1"
        },
        "AvailabilityZone2": {
          "default": "Availability Zone 2"
        },
        "AllowHttpToPublicRuleNumber": {
          "default": "HTTP to Public"
        },
        "AllowHttpsToPublicRuleNumber": {
          "default": "HTTPS to Public"
        },
        "AllowSSHToPublicRuleNumber": {
          "default": "SSH to Public"
        },
        "AllowRDPToPublicRuleNumber": {
          "default": "RDP to Public"
        },
        "AllowReturnTrafficToPublicRuleNumber": {
          "default": "Return Traffic to Public"
        },
        "AllowVpcSubnetsRuleNumber": {
          "default": "VPC Subnets to Public"
        },
        "AllowAllOutboundPublicRuleNumber": {
          "default": "Public Outbound"
        },
        "AllowAllInboundPrivateRuleNumber": {
          "default": "Private Inbound"
        },
        "AllowAllOutboundPrivateRuleNumber": {
          "default": "Private Outbound"
        }
      }
    }
  }
}